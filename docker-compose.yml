services:
  nginx:
    image: nginx
    container_name: nginx
    build:
      context: ./backend/nginx
      dockerfile: Dockerfile
    volumes:
      # - ./backend/nginx/src:/var/www/html
      - ./backend/nginx/logs:/var/log/nginx
      - ./frontend/src:/var/www/html
    init: true
    ports:
      - "$NGINX_PORT:$NGINX_PORT"
    env_file:
      - .env
    networks:
      - our_net
    depends_on:
      django:
        condition: service_healthy

  django:
    image: django
    container_name: django
    build:
      context: ./backend/django
      dockerfile: Dockerfile
    volumes:
      - ./backend/django/src:/django
    init: true
    env_file:
      - .env
    networks:
      - our_net
    healthcheck:
      test: cat $DJANGO_HEALTH
      interval: 3s
      timeout: 2s
      retries: 30
    depends_on:
      postgresql:
        condition: service_healthy
      redis-cache:
        condition: service_healthy
   
  redis-cache:
    image: redis-cache
    container_name: redis-cache
    build:
      context: ./backend/redis-cache
      dockerfile: Dockerfile
    init: true
    env_file:
      - .env
    networks:
      - our_net
    healthcheck:
      test: cat $REDIS_HEALTH
      interval: 3s
      timeout: 2s
      retries: 30

  postgresql:
    image: postgresql
    container_name: postgresql
    build:
      context: ./backend/PostgreSQL
      dockerfile: Dockerfile
    # volumes:
    #   - 
    init: true
    env_file:
      - .env
    networks:
      - our_net 
    healthcheck:
      test: pg_isready --dbname=$POSTGRES_DB --host=$POSTGRES_HOST --port=$POSTGRES_PORT --username=$POSTGRES_USER
      interval: 3s
      timeout: 2s
      retries: 30
    
networks:
  our_net:
    name: taeypark_hyeoan_network
    driver: bridge
